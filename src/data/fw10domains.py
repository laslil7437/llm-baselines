from tqdm import tqdm
import numpy as np
import tiktoken
from datasets import load_dataset, Dataset
import os
import shutil
from collections import defaultdict
from urllib.parse import urlparse
import fasttext

gpt2base = tiktoken.get_encoding("gpt2")

# tokenizer for expanded domain tokens 
# dd_tknzr = tiktoken.Encoding(
#             name = "gpt2_domains",
#             pat_str = gpt2base._pat_str,
#             mergeable_ranks = gpt2base._mergeable_ranks,
#             special_tokens = {
#                 **gpt2base._special_tokens,
#                 'uk': 50257,
#                 'au': 50258,
#                 'ca': 50259,
#                 'in': 50260,
#                 'us': 50261,
#                 'nz': 50262,
#                 'de': 50263,
#                 'ie': 50264,
#                 'eu': 50265,
#                 'za': 50266,
#                 'co': 50267,
#                 'ru': 50268,
#                 'nl': 50269,
#                 'me': 50270,
#                 'io': 50271,
#                 'tv': 50272,
#                 'it': 50273,
#                 'sg': 50274,
#                 'fr': 50275,
#                 'pl': 50276,
#                 'se': 50277,
#                 'ch': 50278,
#                 'tk': 50279,
#                 'ng': 50280,
#                 'my': 50281,
#                 'es': 50282,
#                 'jp': 50283,
#                 'ph': 50284,
#                 'pk': 50285,
#                 'be': 50286,
#                 'dk': 50287,
#                 'cn': 50288,
#                 'cz': 50289,
#                 'no': 50290,
#                 'gr': 50291,
#                 'at': 50292,
#                 'fi': 50293,
#                 'fm': 50294,
#                 'br': 50295,
#                 'hk': 50296,
#                 'ae': 50297,
#                 'ke': 50298,
#                 'ro': 50299,
#                 'cc': 50300,
#                 'id': 50301,
#                 'vn': 50302,
#                 'ua': 50303,
#                 'il': 50304,
#                 'tr': 50305,
#                 'hu': 50306,
#                 'pt': 50307,
#                 'tw': 50308,
#                 'is': 50309,
#                 'ir': 50310,
#                 'kr': 50311,
#                 'ee': 50312,
#                 'ai': 50313,
#                 'lk': 50314,
#                 'to': 50315,
#                 'ws': 50316,
#                 'sk': 50317,
#                 'mx': 50318,
#                 'si': 50319,
#                 'az': 50320,
#                 'cl': 50321,
#                 'ug': 50322,
#                 'lt': 50323,
#                 'lv': 50324,
#                 'hr': 50325,
#                 'th': 50326,
#                 'am': 50327,
#                 'ga': 50328,
#                 'zw': 50329,
#                 'rs': 50330,
#                 'nu': 50331,
#                 'ar': 50332,
#                 'ml': 50333,
#                 'cf': 50334,
#                 'bg': 50335,
#                 'la': 50336,
#                 'pw': 50337,
#                 'bd': 50338,
#                 'gh': 50339,
#                 'sa': 50340,
#                 'gq': 50341,
#                 'lu': 50342,
#                 'ge': 50343,
#                 'ly': 50344,
#                 'mt': 50345,
#                 'gg': 50346,
#                 'np': 50347,
#                 'kz': 50348,
#                 'eg': 50349,
#                 'by': 50350,
#                 'im': 50351,
#                 'ag': 50352,
#                 'cy': 50353,
#                 'md': 50354,
#                 'lb': 50355,
#                 'su': 50356,
#                 'tt': 50357,
#                 'mk': 50358,
#                 'na': 50359,
#                 'st': 50360,
#                 'pe': 50361,
#                 'bz': 50362,
#                 'qa': 50363,
#                 'tl': 50364,
#                 'va': 50365,
#                 'tz': 50366,
#                 'vc': 50367,
#                 'mu': 50368,
#                 'al': 50369,
#                 'mn': 50370,
#                 'ba': 50371,
#                 'bm': 50372,
#                 'cx': 50373,
#                 'je': 50374,
#                 'ky': 50375,
#                 'li': 50376,
#                 'fj': 50377,
#                 'cr': 50378,
#                 'gm': 50379,
#                 'bb': 50380,
#                 'jm': 50381,
#                 'rw': 50382,
#                 'uz': 50383,
#                 'ma': 50384,
#                 'ac': 50385,
#                 'af': 50386,
#                 'pg': 50387,
#                 'jo': 50388,
#                 're': 50389,
#                 'bw': 50390,
#                 'gy': 50391,
#                 'ps': 50392,
#                 'om': 50393,
#                 'gs': 50394,
#                 'sh': 50395,
#                 'do': 50396,
#                 'tm': 50397,
#                 'mv': 50398,
#                 'bt': 50399,
#                 'sc': 50400,
#                 'gi': 50401,
#                 'kh': 50402,
#                 'bn': 50403,
#                 'ms': 50404,
#                 'zm': 50405,
#                 'kw': 50406,
#                 'so': 50407,
#                 'tn': 50408,
#                 'mo': 50409,
#                 'kg': 50410,
#                 'as': 50411,
#                 've': 50412,
#                 'ec': 50413,
#                 'cd': 50414,
#                 'cu': 50415,
#                 'mm': 50416,
#                 'iq': 50417,
#                 'vu': 50418,
#                 'mw': 50419,
#                 'cm': 50420,
#                 'bh': 50421,
#                 'sb': 50422,
#                 'vg': 50423,
#                 'gd': 50424,
#                 'bs': 50425,
#                 'uy': 50426,
#                 'pn': 50427,
#                 'dj': 50428,
#                 'sv': 50429,
#                 'pr': 50430,
#                 'et': 50431,
#                 'fo': 50432,
#                 'com': 50433,
#                 'org': 50434,
#                 'net': 50435,
#                 'edu': 50436,
#                 'gov': 50437,
#                 'info': 50438,
#                 'blog': 50439,
#                 'biz': 50440,
#                 'xyz': 50441,
#                 'news': 50442,
#                 'app': 50443,
#                 'online': 50444,
#                 'club': 50445,
#                 'mil': 50446,
#                 'int': 50447,
#                 'pro': 50448,
#                 'top': 50449,
#                 'shop': 50450,
#                 'life': 50451,
#                 'asia': 50452,
#                 'live': 50453,
#                 'site': 50454,
#                 'today': 50455,
#                 'travel': 50456,
#                 'media': 50457,
#                 'coop': 50458,
#                 'store': 50459,
#                 'scot': 50460,
#                 'website': 50461,
#                 'tech': 50462,
#                 'mobi': 50463,
#                 'space': 50464,
#                 'world': 50465,
#                 'london': 50466,
#                 'jobs': 50467,
#                 'name': 50468,
#                 'global': 50469,
#                 'church': 50470,
#                 'cat': 50471,
#                 'art': 50472,
#                 'dev': 50473,
#                 'wiki': 50474,
#                 'nyc': 50475,
#                 'link': 50476,
#                 'agency': 50477,
#                 'aero': 50478,
#                 'guru': 50479,
#                 'guide': 50480,
#                 'design': 50481,
#                 'wales': 50482,
#                 'one': 50483,
#                 'law': 50484,
#                 'network': 50485,
#                 'com:443': 50486,
#                 'digital': 50487,
#                 'africa': 50488,
#                 'press': 50489,
#                 'rocks': 50490,
#                 'studio': 50491,
#                 'review': 50492,
#                 'solutions': 50493,
#                 'academy': 50494,
#                 'win': 50495,
#                 'games': 50496,
#                 'cloud': 50497,
#                 'work': 50498,
#                 'buzz': 50499,
#                 'reviews': 50500,
#                 'tips': 50501,
#                 'education': 50502,
#                 'fun': 50503,
#                 'ninja': 50504,
#                 'photography': 50505,
#                 'help': 50506,
#                 'zone': 50507,
#                 'city': 50508,
#                 'community': 50509,
#                 'group': 50510,
#                 'international': 50511,
#                 'social': 50512,
#                 'museum': 50513,
#                 'icu': 50514,
#                 'events': 50515,
#                 'report': 50516,
#                 'vip': 50517,
#                 'health': 50518,
#                 'center': 50519,
#                 'works': 50520,
#                 'cymru': 50521,
#                 'science': 50522,
#                 'care': 50523,
#                 'bank': 50524,
#                 'place': 50525,
#                 'codes': 50526,
#                 'xn--p1ai': 50527,
#                 'ngo': 50528,
#                 'school': 50529,
#                 'ink': 50530,
#                 'fit': 50531,
#                 'earth': 50532,
#                 'marketing': 50533,
#                 'realtor': 50534,
#                 'gallery': 50535,
#                 'company': 50536,
#                 'love': 50537,
#                 'audio': 50538,
#                 'pub': 50539,
#                 'download': 50540,
#                 'expert': 50541,
#                 'bike': 50542,
#                 'coffee': 50543,
#                 'video': 50544,
#                 'services': 50545,
#                 'bio': 50546,
#                 'foundation': 50547,
#                 'technology': 50548,
#                 'ltd': 50549,
#                 'stream': 50550,
#                 'finance': 50551,
#                 'land': 50552,
#                 'legal': 50553,
#                 'directory': 50554,
#                 'team': 50555,
#                 'farm': 50556,
#                 'energy': 50557,
#                 'berlin': 50558,
#                 'best': 50559,
#                 'watch': 50560,
#                 'institute': 50561,
#                 'house': 50562,
#                 'deals': 50563,
#                 'consulting': 50564,
#                 'click': 50565,
#                 'wine': 50566,
#                 'style': 50567,
#                 'business': 50568,
#                 'trade': 50569,
#                 'plus': 50570,
#                 'host': 50571,
#                 'tokyo': 50572,
#                 'vegas': 50573,
#                 'support': 50574,
#                 'market': 50575,
#                 'eus': 50576,
#                 'recipes': 50577,
#                 'systems': 50578,
#                 'org:443': 50579,
#                 'onl': 50580,
#                 'eco': 50581,
#                 'photo': 50582,
#                 'yoga': 50583,
#                 'beer': 50584,
#                 'training': 50585,
#                 'fyi': 50586,
#                 'tools': 50587,
#                 'swiss': 50588,
#                 'show': 50589,
#                 'page': 50590,
#                 'run': 50591,
#                 'kiwi': 50592,
#                 'software': 50593,
#                 'moe': 50594,
#                 'party': 50595,
#                 'bet': 50596,
#                 'photos': 50597,
#                 'cafe': 50598,
#                 'careers': 50599,
#                 'coach': 50600,
#                 'kpmg': 50601,
#                 'lol': 50602,
#                 'pics': 50603,
#                 'chat': 50604,
#                 'fitness': 50605,
#                 'capital': 50606,
#                 'boutique': 50607,
#                 'exchange': 50608,
#                 'cash': 50609,
#                 'tours': 50610,
#                 'bid': 50611,
#                 'email': 50612,
#                 'bnpparibas': 50613,
#                 'sydney': 50614,
#                 'green': 50615,
#                 'blue': 50616,
#                 'kitchen': 50617,
#                 'golf': 50618,
#                 'university': 50619,
#                 'money': 50620,
#                 'wtf': 50621,
#                 'ventures': 50622,
#                 'lawyer': 50623,
#                 'sport': 50624,
#                 'com:8080': 50625,
#                 'direct': 50626,
#                 'dating': 50627,
#                 'CC-MAIN-2013-20': 50628,
#                 'CC-MAIN-2013-48': 50629,
#                 'CC-MAIN-2014-10': 50630,
#                 'CC-MAIN-2014-15': 50631,
#                 'CC-MAIN-2014-23': 50632,
#                 'CC-MAIN-2014-35': 50633,
#                 'CC-MAIN-2014-41': 50634,
#                 'CC-MAIN-2014-42': 50635,
#                 'CC-MAIN-2014-49': 50636,
#                 'CC-MAIN-2014-52': 50637,
#                 'CC-MAIN-2015-06': 50638,
#                 'CC-MAIN-2015-11': 50639,
#                 'CC-MAIN-2015-14': 50640,
#                 'CC-MAIN-2015-18': 50641,
#                 'CC-MAIN-2015-22': 50642,
#                 'CC-MAIN-2015-27': 50643,
#                 'CC-MAIN-2015-32': 50644,
#                 'CC-MAIN-2015-35': 50645,
#                 'CC-MAIN-2015-40': 50646,
#                 'CC-MAIN-2015-48': 50647,
#                 'CC-MAIN-2016-07': 50648,
#                 'CC-MAIN-2016-18': 50649,
#                 'CC-MAIN-2016-22': 50650,
#                 'CC-MAIN-2016-26': 50651,
#                 'CC-MAIN-2016-30': 50652,
#                 'CC-MAIN-2016-36': 50653,
#                 'CC-MAIN-2016-40': 50654,
#                 'CC-MAIN-2016-44': 50655,
#                 'CC-MAIN-2016-50': 50656,
#                 'CC-MAIN-2017-04': 50657,
#                 'CC-MAIN-2017-09': 50658,
#                 'CC-MAIN-2017-13': 50659,
#                 'CC-MAIN-2017-17': 50660,
#                 'CC-MAIN-2017-22': 50661,
#                 'CC-MAIN-2017-26': 50662,
#                 'CC-MAIN-2017-30': 50663,
#                 'CC-MAIN-2017-34': 50664,
#                 'CC-MAIN-2017-39': 50665,
#                 'CC-MAIN-2017-43': 50666,
#                 'CC-MAIN-2017-47': 50667,
#                 'CC-MAIN-2017-51': 50668,
#                 'CC-MAIN-2018-05': 50669,
#                 'CC-MAIN-2018-09': 50670,
#                 'CC-MAIN-2018-13': 50671,
#                 'CC-MAIN-2018-17': 50672,
#                 'CC-MAIN-2018-22': 50673,
#                 'CC-MAIN-2018-26': 50674,
#                 'CC-MAIN-2018-30': 50675,
#                 'CC-MAIN-2018-34': 50676,
#                 'CC-MAIN-2018-39': 50677,
#                 'CC-MAIN-2018-43': 50678,
#                 'CC-MAIN-2018-47': 50679,
#                 'CC-MAIN-2018-51': 50680,
#                 'CC-MAIN-2019-04': 50681,
#                 'CC-MAIN-2019-09': 50682,
#                 'CC-MAIN-2019-18': 50683,
#                 'CC-MAIN-2019-22': 50684,
#                 'CC-MAIN-2019-26': 50685,
#                 'CC-MAIN-2019-30': 50686,
#                 'CC-MAIN-2019-35': 50687,
#                 'CC-MAIN-2019-39': 50688,
#                 'CC-MAIN-2019-43': 50689,
#                 'CC-MAIN-2019-47': 50690,
#                 'CC-MAIN-2019-51': 50691,
#                 'CC-MAIN-2020-05': 50692,
#                 'CC-MAIN-2020-10': 50693,
#                 'CC-MAIN-2020-16': 50694,
#                 'CC-MAIN-2020-24': 50695,
#                 'CC-MAIN-2020-29': 50696,
#                 'CC-MAIN-2020-34': 50697,
#                 'CC-MAIN-2020-40': 50698,
#                 'CC-MAIN-2020-45': 50699,
#                 'CC-MAIN-2020-50': 50700,
#                 'CC-MAIN-2021-04': 50701,
#                 'CC-MAIN-2021-10': 50702,
#                 'CC-MAIN-2021-17': 50703,
#                 'CC-MAIN-2021-21': 50704,
#                 'CC-MAIN-2021-25': 50705,
#                 'CC-MAIN-2021-31': 50706,
#                 'CC-MAIN-2021-39': 50707,
#                 'CC-MAIN-2021-43': 50708,
#                 'CC-MAIN-2021-49': 50709,
#                 'CC-MAIN-2022-05': 50710,
#                 'CC-MAIN-2022-21': 50711,
#                 'CC-MAIN-2022-27': 50712,
#                 'CC-MAIN-2022-33': 50713,
#                 'CC-MAIN-2022-40': 50714,
#                 'CC-MAIN-2022-49': 50715,
#                 'CC-MAIN-2023-06': 50716,
#                 'CC-MAIN-2023-14': 50717,
#                 'CC-MAIN-2023-23': 50718,
#                 'CC-MAIN-2023-40': 50719,
#                 'CC-MAIN-2023-50': 50720,
#                 'CC-MAIN-2024-10': 50721,
#                 'CC-MAIN-2019-13': 50722
#             }
#         )

dd_tknzr = tiktoken.Encoding(
            name = "gpt2_domains",
            pat_str = gpt2base._pat_str,
            mergeable_ranks = gpt2base._mergeable_ranks,
            special_tokens = {
                **gpt2base._special_tokens,
                'uk': 50257,
                'au': 50258,
                'ca': 50259,
                'in': 50260,
                'us': 50261,
                'nz': 50262,
                'de': 50263,
                'ie': 50264,
                'eu': 50265,
                'za': 50266,
                'co': 50267,
                'ru': 50268,
                'nl': 50269,
                'me': 50270,
                'io': 50271,
                'tv': 50272,
                'it': 50273,
                'sg': 50274,
                'fr': 50275,
                'pl': 50276,
                'se': 50277,
                'ch': 50278,
                'tk': 50279,
                'ng': 50280,
                'my': 50281,
                'es': 50282,
                'jp': 50283,
                'ph': 50284,
                'pk': 50285,
                'be': 50286,
                'dk': 50287,
                'cn': 50288,
                'cz': 50289,
                'no': 50290,
                'gr': 50291,
                'at': 50292,
                'fi': 50293,
                'fm': 50294,
                'br': 50295,
                'hk': 50296,
                'ae': 50297,
                'ke': 50298,
                'ro': 50299,
                'cc': 50300,
                'id': 50301,
                'vn': 50302,
                'ua': 50303,
                'il': 50304,
                'tr': 50305,
                'hu': 50306,
                'pt': 50307,
                'tw': 50308,
                'is': 50309,
                'ir': 50310,
                'kr': 50311,
                'ee': 50312,
                'ai': 50313,
                'lk': 50314,
                'to': 50315,
                'ws': 50316,
                'sk': 50317,
                'mx': 50318,
                'si': 50319,
                'az': 50320,
                'cl': 50321,
                'ug': 50322,
                'lt': 50323,
                'lv': 50324,
                'hr': 50325,
                'th': 50326,
                'am': 50327,
                'ga': 50328,
                'zw': 50329,
                'rs': 50330,
                'nu': 50331,
                'ar': 50332,
                'ml': 50333,
                'cf': 50334,
                'bg': 50335,
                'la': 50336,
                'pw': 50337,
                'bd': 50338,
                'gh': 50339,
                'sa': 50340,
                'gq': 50341,
                'lu': 50342,
                'ge': 50343,
                'ly': 50344,
                'mt': 50345,
                'gg': 50346,
                'np': 50347,
                'kz': 50348,
                'eg': 50349,
                'by': 50350,
                'im': 50351,
                'ag': 50352,
                'cy': 50353,
                'md': 50354,
                'lb': 50355,
                'su': 50356,
                'tt': 50357,
                'mk': 50358,
                'na': 50359,
                'st': 50360,
                'pe': 50361,
                'bz': 50362,
                'qa': 50363,
                'tl': 50364,
                'va': 50365,
                'tz': 50366,
                'com': 50367,
                'org': 50368,
                'net': 50369,
                'edu': 50370,
                'gov': 50371,
                'info': 50372,
                'blog': 50373,
                'biz': 50374,
                'xyz': 50375,
                'news': 50376,
                'app': 50377,
                'online': 50378,
                'club': 50379,
                'mil': 50380,
                'int': 50381,
                'pro': 50382,
                'top': 50383,
                'shop': 50384,
                'life': 50385,
                'asia': 50386,
                'live': 50387,
                'site': 50388,
                'today': 50389,
                'travel': 50390,
                'media': 50391,
                'coop': 50392,
                'store': 50393,
                'scot': 50394,
                'website': 50395,
                'tech': 50396,
                'mobi': 50397,
                'space': 50398,
                'world': 50399,
                'london': 50400,
                'jobs': 50401,
                'name': 50402,
                'global': 50403,
                'church': 50404,
                'cat': 50405,
                'art': 50406,
                'dev': 50407,
                'wiki': 50408,
                'nyc': 50409,
                'link': 50410,
                'agency': 50411,
                'aero': 50412,
                'guru': 50413,
                'guide': 50414,
                'design': 50415,
                'wales': 50416,
                'one': 50417,
                'law': 50418,
                'network': 50419,
                'com:443': 50420,
                'digital': 50421,
                'africa': 50422,
                'press': 50423,
                'rocks': 50424,
                'studio': 50425,
                'review': 50426,
                'solutions': 50427,
                'academy': 50428,
                'win': 50429,
                'games': 50430,
                'cloud': 50431,
                'work': 50432,
                'buzz': 50433,
                'reviews': 50434,
                'tips': 50435,
                'other': 50436,
                'CC-MAIN-2013-20':	50437,
                'CC-MAIN-2013-48':	50438,
                'CC-MAIN-2014-10':	50439,
                'CC-MAIN-2014-15':	50440,
                'CC-MAIN-2014-23':	50441,
                'CC-MAIN-2014-35':	50442,
                'CC-MAIN-2014-41':	50443,
                'CC-MAIN-2014-42':	50444,
                'CC-MAIN-2014-49':	50445,
                'CC-MAIN-2014-52':	50446,
                'CC-MAIN-2015-06':	50447,
                'CC-MAIN-2015-11':	50448,
                'CC-MAIN-2015-14':	50449,
                'CC-MAIN-2015-18':	50450,
                'CC-MAIN-2015-22':	50451,
                'CC-MAIN-2015-27':	50452,
                'CC-MAIN-2015-32':	50453,
                'CC-MAIN-2015-35':	50454,
                'CC-MAIN-2015-40':	50455,
                'CC-MAIN-2015-48':	50456,
                'CC-MAIN-2016-07':	50457,
                'CC-MAIN-2016-18':	50458,
                'CC-MAIN-2016-22':	50459,
                'CC-MAIN-2016-26':	50460,
                'CC-MAIN-2016-30':	50461,
                'CC-MAIN-2016-36':	50462,
                'CC-MAIN-2016-40':	50463,
                'CC-MAIN-2016-44':	50464,
                'CC-MAIN-2016-50':	50465,
                'CC-MAIN-2017-04':	50466,
                'CC-MAIN-2017-09':	50467,
                'CC-MAIN-2017-13':	50468,
                'CC-MAIN-2017-17':	50469,
                'CC-MAIN-2017-22':	50470,
                'CC-MAIN-2017-26':	50471,
                'CC-MAIN-2017-30':	50472,
                'CC-MAIN-2017-34':	50473,
                'CC-MAIN-2017-39':	50474,
                'CC-MAIN-2017-43':	50475,
                'CC-MAIN-2017-47':	50476,
                'CC-MAIN-2017-51':	50477,
                'CC-MAIN-2018-05':	50478,
                'CC-MAIN-2018-09':	50479,
                'CC-MAIN-2018-13':	50480,
                'CC-MAIN-2018-17':	50481,
                'CC-MAIN-2018-22':	50482,
                'CC-MAIN-2018-26':	50483,
                'CC-MAIN-2018-30':	50484,
                'CC-MAIN-2018-34':	50485,
                'CC-MAIN-2018-39':	50486,
                'CC-MAIN-2018-43':	50487,
                'CC-MAIN-2018-47':	50488,
                'CC-MAIN-2018-51':	50489,
                'CC-MAIN-2019-04':	50490,
                'CC-MAIN-2019-09':	50491,
                'CC-MAIN-2019-18':	50492,
                'CC-MAIN-2019-22':	50493,
                'CC-MAIN-2019-26':	50494,
                'CC-MAIN-2019-30':	50495,
                'CC-MAIN-2019-35':	50496,
                'CC-MAIN-2019-39':	50497,
                'CC-MAIN-2019-43':	50498,
                'CC-MAIN-2019-47':	50499,
                'CC-MAIN-2019-51':	50500,
                'CC-MAIN-2020-05':	50501,
                'CC-MAIN-2020-10':	50502,
                'CC-MAIN-2020-16':	50503,
                'CC-MAIN-2020-24':	50504,
                'CC-MAIN-2020-29':	50505,
                'CC-MAIN-2020-34':	50506,
                'CC-MAIN-2020-40':	50507,
                'CC-MAIN-2020-45':	50508,
                'CC-MAIN-2020-50':	50509,
                'CC-MAIN-2021-04':	50510,
                'CC-MAIN-2021-10':	50511,
                'CC-MAIN-2021-17':	50512,
                'CC-MAIN-2021-21':	50513,
                'CC-MAIN-2021-25':	50514,
                'CC-MAIN-2021-31':	50515,
                'CC-MAIN-2021-39':	50516,
                'CC-MAIN-2021-43':	50517,
                'CC-MAIN-2021-49':	50518,
                'CC-MAIN-2022-05':	50519,
                'CC-MAIN-2022-21':	50520,
                'CC-MAIN-2022-27':	50521,
                'CC-MAIN-2022-33':	50522,
                'CC-MAIN-2022-40':	50523,
                'CC-MAIN-2022-49':	50524,
                'CC-MAIN-2023-06':	50525,
                'CC-MAIN-2023-14':	50526,
                'CC-MAIN-2023-23':	50527,
                'CC-MAIN-2023-40':	50528,
                'CC-MAIN-2023-50':	50529,
                'CC-MAIN-2024-10':	50530,
                'CC-MAIN-2019-13':	50531,
            }
        )

def modify_data_domains(dataset):
    
    # hard-coded list of TLDs with >= 100 entries 
    # valid_domains = ['uk','au','ca','in','us','nz','de','ie','eu','za','co','ru','nl','me','io','tv','it','sg','fr','pl'
    #     'se','ch','tk','ng','my','es','jp','ph','pk','be','dk','cn','cz','no','gr','at','fi','fm','br','hk'
    #     'ae','ke','ro','cc','id','vn','ua','il','tr','hu','pt','tw','is','ir','kr','ee','ai','lk','to','ws'
    #     'sk','mx','si','az','cl','ug','lt','lv','hr','th','am','ga','zw','rs','nu','ar','ml','cf','bg','la'
    #     'pw','bd','gh','sa','gq','lu','ge','ly','mt','gg','np','kz','eg','by','im','ag','cy','md','lb','su'
    #     'tt','mk','na','st','pe','bz','qa','tl','va','tz','vc','mu','al','mn','ba','bm','cx','je','ky','li'
    #     'fj','cr','gm','bb','jm','rw','uz','ma','ac','af','pg','jo','re','bw','gy','ps','om','gs','sh','do'
    #     'tm','mv','bt','sc','gi','kh','bn','ms','zm','kw','so','tn','mo','kg','as','ve','ec','cd','cu','mm'
    #     'iq','vu','mw','cm','bh','sb','vg','gd','bs','uy','pn','dj','sv','pr','et','fo','com','org','net','edu'
    #     'gov','info','blog','biz','xyz','news','app','online','club','mil','int','pro','top','shop','life'
    #     'asia','live','site','today','travel','media','coop','store','scot','website','tech','mobi'
    #     'space','world','london','jobs','name','global','church','cat','art','dev','wiki','nyc','link'
    #     'agency','aero','guru','guide','design','wales','one','law','network','com:443','digital','africa'
    #     'press','rocks','studio','review','solutions','academy','win','games','cloud','work','buzz'
    #     'reviews','tips','education','fun','ninja','photography','help','zone','city','community'
    #     'group','international','social','museum','icu','events','report','vip','health','center'
    #     'works','cymru','science','care','bank','place','codes','xn--p1ai','ngo','school'
    #     'ink','fit','earth','marketing','realtor','gallery','company','love','audio','pub'
    #     'download','expert','bike','coffee','video','services','bio','foundation','technology','ltd'
    #     'stream','finance','land','legal','directory','team','farm','energy','berlin','best'
    #     'watch','institute','house','deals','consulting','click','wine','style','business','trade'
    #     'plus','host','tokyo','vegas','support','market','eus','recipes','systems','org:443'
    #     'onl','eco','photo','yoga','beer','training','fyi','tools','swiss','show','page','run','kiwi'
    #     'software','moe','party','bet','photos','cafe','careers','coach','kpmg','lol','pics','chat'
    #     'fitness','capital','boutique','exchange','cash','tours','bid','email','bnpparibas','sydney'
    #     'green','blue','kitchen','golf','university','money','wtf','ventures','lawyer','sport'
    #     'com:8080','direct','dating']

    # hard-coded list of TLDs with >= 520 entries (for a total of 180 of them)
    valid_domains = ['uk','au','ca','in','us','nz','de','ie','eu','za','co','ru','nl','me','io','tv',
        'it','sg','fr','pl','se','ch','tk','ng','my','es','jp','ph','pk','be','dk','cn',
        'cz','no','gr','at','fi','fm','br','hk','ae','ke','ro','cc','id','vn','ua','il',
        'tr','hu','pt','tw','is','ir','kr','ee','ai','lk','to','ws','sk','mx','si','az',
        'cl','ug','lt','lv','hr','th','am','ga','zw','rs','nu','ar','ml','cf','bg','la',
        'pw','bd','gh','sa','gq','lu','ge','ly','mt','gg','np','kz','eg','by','im',
        'ag','cy','md','lb','su','tt','mk','na','st','pe','bz','qa','tl','va','tz',
        'com','org','net','edu','gov','info','blog','biz','xyz','news','app',
        'online','club','mil','int','pro','top','shop','life','asia','live','site',
        'today','travel','media','coop','store','scot','website','tech',
        'mobi','space','world','london','jobs','name','global','church',
        'cat','art','dev','wiki','nyc','link','agency','aero','guru','guide',
        'design','wales','one','law','network','com:443','digital',
        'africa','press','rocks','studio','review','solutions','academy',
        'win','games','cloud','work','buzz','reviews','tips','other'] 
    
    # edit "url" column to just be domain, or "other"
    def process_url(example):
        parsed_url = urlparse(example["url"])
        domain = parsed_url.netloc
        ending = domain.split('.')[-1]
        if ending not in valid_domains:
            example["url"] = "other"
        else:
            example["url"] = ending
        return example
    dataset = dataset.map(process_url)
    print("----> dataset modified")
    return dataset 

def get_fw10domain_data(args, num_proc=40):
    global FINEWEB10_DATA_PATH 
    FINEWEB10_DATA_PATH = os.path.join(os.path.dirname(__file__), f"datasets/{args.filename}/") 

    if not os.path.exists(os.path.join(FINEWEB10_DATA_PATH, "train.bin")):
        os.makedirs(FINEWEB10_DATA_PATH, exist_ok=True)
        
        dataset = load_dataset("HuggingFaceFW/fineweb", name="sample-10BT")
        dataset = dataset.select_columns(["text", "dump", "url"])
        print("----> dataset loaded")

        if args.fw_domains == True:
            dataset = modify_data_domains(dataset) 

        split_dataset = dataset["train"].train_test_split(
            test_size=0.1, seed=2357, shuffle=True
        )
        split_dataset["val"] = split_dataset.pop("test")
        print("----> dataset split")

        seq_length = args.sequence_length

        def process(example):
            ids = dd_tknzr.encode_ordinary(
                example["text"]
            )  # encode_ordinary ignores any special tokens
            ids.append(
                dd_tknzr.eot_token
            )  # add the end of text token, e.g. 50256 for gpt2 bpe

            if args.token_placement == 'end':
                if args.fw_dumps == True:
                    ids.append(
                        dd_tknzr.encode(example["dump"], allowed_special="all")[0]                
                    )  # add dump token at end
                if args.fw_domains == True:
                    ids.append(
                        dd_tknzr.encode(example["url"], allowed_special="all")[0]
                    )  # add domain/url token at end
            if args.token_placement == 'mid':
                if args.fw_dumps == True:
                    if args.fw_domains == True:
                        # add both tokens throughout
                        for i in range(0, len(ids), seq_length):
                            ids.insert(i, dd_tknzr.encode(example["dump"], allowed_special="all")[0])
                            ids.insert(i+1, dd_tknzr.encode(example["url"], allowed_special="all")[0])
                    else:
                        # add dump token throughout
                        for i in range(0, len(ids), seq_length):
                            ids.insert(i, dd_tknzr.encode(example["dump"], allowed_special="all")[0])
                else:
                    # add domain token throughout
                    for i in range(0, len(ids), seq_length):
                        ids.insert(i, dd_tknzr.encode(example["url"], allowed_special="all")[0])
            if args.token_placement == 'start':
                if args.fw_dumps == True:
                    if args.fw_domains == True:
                        # add both tokens at start
                        ids.insert(0, dd_tknzr.encode(example["dump"], allowed_special="all")[0])
                        ids.insert(1, dd_tknzr.encode(example["url"], allowed_special="all")[0])
                    else:
                        # add dump token at start
                        ids.insert(0, dd_tknzr.encode(example["dump"], allowed_special="all")[0])
                else:
                    # add domain token at start
                    ids.insert(0, dd_tknzr.encode(example["url"], allowed_special="all")[0])
            if args.token_placement == 'both':
                if args.fw_dumps == True:
                    if args.fw_domains == True:
                        # add both tokens at start and end
                        ids.insert(0, dd_tknzr.encode(example["dump"], allowed_special="all")[0])
                        ids.insert(1, dd_tknzr.encode(example["url"], allowed_special="all")[0])
                        ids.append(dd_tknzr.encode(example["dump"], allowed_special="all")[0])
                        ids.append(dd_tknzr.encode(example["url"], allowed_special="all")[0])
                    else:
                        # add dump token at start and end
                        ids.insert(0, dd_tknzr.encode(example["dump"], allowed_special="all")[0])
                        ids.append(dd_tknzr.encode(example["dump"], allowed_special="all")[0])
                else:
                    # add domain token at start and end
                    ids.insert(0, dd_tknzr.encode(example["url"], allowed_special="all")[0])
                    ids.append(dd_tknzr.encode(example["url"], allowed_special="all")[0])

            out = {"ids": ids, "len": len(ids)}
            return out

        # tokenize the dataset
        tokenized = split_dataset.map(
            process,
            remove_columns=["text", "dump", "url"],
            desc="tokenizing the splits",
            num_proc=num_proc,
        )
        print("----> dataset tokenized")

        # concatenate all the ids in each dataset into one large file we can use for training
        for split, dset in tokenized.items():
            arr_len = np.sum(dset["len"])
            filename = os.path.join(FINEWEB10_DATA_PATH, f"{split}.bin")
            dtype = np.uint16  # (can do since enc.max_token_value == 50256 is < 2**16)
            arr = np.memmap(filename, dtype=dtype, mode="w+", shape=(arr_len,))
            total_batches = min(1024, len(dset))

            idx = 0
            for batch_idx in tqdm(range(total_batches), desc=f"writing {filename}"):
                # Batch together samples for faster write
                batch = dset.shard(
                    num_shards=total_batches, index=batch_idx, contiguous=True
                ).with_format("numpy")
                arr_batch = np.concatenate(batch["ids"])
                # Write into mmap
                arr[idx : idx + len(arr_batch)] = arr_batch
                idx += len(arr_batch)
            arr.flush()
    return {'train': os.path.join(FINEWEB10_DATA_PATH, 'train.bin'), 'val': os.path.join(FINEWEB10_DATA_PATH, 'val.bin')}
